// Test 1: Проверка простого выражения с операторами сравнения и арифметическими операторами
if (a == 5 && b != 10) {
    return a + b;
}

// Test 2: Проверка оператора присваивания
int x = 5;
x += 10;
y -= 20;

// Test 3: Проверка оператора сравнения
if (x == y) {
    return true;
}

// Test 4: Проверка логического оператора OR
if (x > 10 || y < 5) {
    return false;
}

// Test 5: Проверка оператора НЕ и оператора НЕравенства
if (!(x != 5)) {
    return false;
}

// Test 6: Проверка оператора умножения, деления и остатка от деления
int z = x * y / 2 % 3;

// Test 7: Проверка унарных операторов инкремента и декремента
x++;
y--;

// Test 8: Проверка сложных логических выражений
if ((x < y && z > 5) || (a == 0 && !(b != 10))) {
    return 0;
}

// Test 9: Проверка оператора сравнения с типом
if (x is int) {
    println("x is an integer");
}

// Test 10: Проверка комбинации операторов с массивами и функциями
arr[0] = func(a) + 10 - arr[2] * arr[3] / 4;

// Test 11: Проверка использования скобок для приоритета операций
int result = (a + b) * (c - d) / (e % 2);

// Test 12: Проверка тернарного оператора
int result = (x > y) ? x : y;

// Test 13: Проверка сложных операторов присваивания
x *= 2;
y /= 3;
z %= 4;

// Test 14: Проверка операторов сдвига
int shiftedLeft = x << 1;
int shiftedRight = y >> 2;

// Test 15: Проверка битовых операторов
int bitwiseAnd = x & y;
int bitwiseOr = x | y;
int bitwiseXor = x ^ z;

// Test 16: Проверка побитового отрицания
int bitwiseNot = ~x;
